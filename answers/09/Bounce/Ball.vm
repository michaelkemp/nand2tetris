function Ball.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 3
pop this 2
push argument 4
pop this 3
push constant 1
pop this 4
push constant 1
pop this 5
push argument 2
pop this 6
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.getDx 0
push argument 0
pop pointer 0
push this 2
return
function Ball.getDy 0
push argument 0
pop pointer 0
push this 3
return
function Ball.upX 0
push argument 0
pop pointer 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function Ball.downX 0
push argument 0
pop pointer 0
push this 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
sub
pop this 2
label IF_FALSE0
push constant 0
return
function Ball.upY 0
push argument 0
pop pointer 0
push this 3
push constant 1
add
pop this 3
push constant 0
return
function Ball.downY 0
push argument 0
pop pointer 0
push this 3
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 1
sub
pop this 3
label IF_FALSE0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
call Screen.clearScreen 0
pop temp 0
push this 0
push this 1
push this 6
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.move 1
push argument 0
pop pointer 0
push this 1
push this 3
push this 5
call Math.multiply 2
add
pop local 0
push local 0
push this 6
gt
push local 0
push constant 256
push this 6
sub
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push this 3
push this 5
call Math.multiply 2
add
pop this 1
goto IF_END0
label IF_FALSE0
push this 5
push constant 1
neg
call Math.multiply 2
pop this 5
label IF_END0
push this 0
push this 2
push this 4
call Math.multiply 2
add
pop local 0
push local 0
push this 6
gt
push local 0
push constant 512
push this 6
sub
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 2
push this 4
call Math.multiply 2
add
pop this 0
goto IF_END1
label IF_FALSE1
push this 4
push constant 1
neg
call Math.multiply 2
pop this 4
label IF_END1
push constant 0
return
